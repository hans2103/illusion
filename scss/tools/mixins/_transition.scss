// Globals
@use "sass:list";
@use "../variables/transition";

// Default transition
//
// Usage:   @include transition(width, height 0.3s ease-in-out);
// Output:  transition(width 0.2s, height 0.3s ease-in-out);
//
// Pass in any number of transitions

@mixin transition(
  $transitions...
) {
  $unfoldedTransitions: ();
  @if list.length($transitions) == 0 {
    $unfoldedTransitions: list.append($unfoldedTransitions, unfoldTransition(all), comma);
  }
  @each $transition in $transitions {
    $unfoldedTransitions: list.append($unfoldedTransitions, unfoldTransition($transition), comma);
  }
  & {
    transition: $unfoldedTransitions;
  }
}


// Default transition settings
//
// https://gist.github.com/tobiasahlin/7a421fb9306a4f518aab

@function unfoldTransition ($transition) {
  // Default values
  $property: all;
  $duration: transition.$illusion-transition-duration;
  $easing: transition.$illusion-transition-easing;
  $delay: transition.$illusion-transition-delay;
  $defaults: ($property, $duration, $easing, $delay);

  // Grab transition properties if they exist
  $unfoldedTransition: ();
  @for $i from 1 through list.length($defaults) {
    $p: null;
    @if $i <= list.length($transition) {
      $p: list.nth($transition, $i)
    } @else {
      $p: list.nth($defaults, $i)
    }
    $unfoldedTransition: list.append($unfoldedTransition, $p);
  }

  @return $unfoldedTransition;
}
