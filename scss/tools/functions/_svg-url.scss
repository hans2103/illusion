// Globals
@use "sass:math";
@use "sass:string";
@use "sass:list";
@use "strReplace";


// Function to create an optimized svg url
// https://codepen.io/jakob-e/pen/doMoML?editors=0100

@function svg-url($svg){

  // Add missing namespace
  @if not string.index($svg,xmlns) {
    $svg: strReplace.str-replace($svg, '<svg','<svg xmlns="http://www.w3.org/2000/svg"');
  }

  // Chunk up string in order to avoid
  // "stack level too deep" error
  $encoded:'';
  $slice: 2000;
  $index: 0;
  $loops: math.ceil(math.div(list.length($svg), $slice));
  @for $i from 1 through $loops {
    $chunk: string.slice($svg, $index, $index + $slice - 1);

    // Encode
    $chunk: strReplace.str-replace($chunk,'"', '\'');
    $chunk: strReplace.str-replace($chunk,'%', '%25');
    $chunk: strReplace.str-replace($chunk,'&', '%26');
    $chunk: strReplace.str-replace($chunk,'#', '%23');
    $chunk: strReplace.str-replace($chunk,'{', '%7B');
    $chunk: strReplace.str-replace($chunk,'}', '%7D');
    $chunk: strReplace.str-replace($chunk,'<', '%3C');
    $chunk: strReplace.str-replace($chunk,'>', '%3E');

    $encoded: #{$encoded}#{$chunk};
    $index: $index + $slice;
  }
  @return url("data:image/svg+xml,#{$encoded}");
}
